import pymongo
import time
from disnake.ext import commands, tasks
from config import *
import disnake

test_guild = [1084577336340512889]


test_channel = 1091016748968456302

class Love_poisk(commands.Cog, name="loves_poisk"):
    def __init__(self, bot):
        self.bot: disnake.Client = bot

        self.cluster = self.bot.cluster
        self.davinchik_db: pymongo.collection.Collection = self.cluster.infinity.davinchik

        self.embed_search: disnake.Embed = disnake.Embed(
            title='–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞',
            description=f'–°–æ—Å—Ç–∞–≤–ª—è—è –∞–Ω–∫–µ—Ç—É, –≤—ã **—Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å** –∏ **–æ–±—è–∑—É–µ—Ç–µ—Å—å** —Å–æ–±–ª—é–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã:\n'
                        f' –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è.\n'
                        f' –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤ –∞–Ω–∫–µ—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –≤–æ–∑—Ä–∞—Å—Ç —á–µ–ª–æ–≤–µ–∫–∞.\n'
                        f' –°—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–µ–Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –≤ –ª—é–±—ã—Ö –µ–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è—Ö.\n\n'
                        f'> ***–ü–æ–º–Ω–∏—Ç–µ**, –º—ã **–Ω–µ** –æ–±—è–∑—É–µ–º –≤–∞—Å —É–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞—à –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç, –Ω–æ –∑–∞—è–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π **–Ω–µ** –¥–æ—Å—Ç–∏–≥—à–∏—Ö —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è –±—É–¥—É—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã, –∞ –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É **–∑–∞–∫—Ä—ã—Ç**. –ó–∞ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.*\n',
            color=0x2b2d31
        )
        self.embed_search.set_thumbnail(url="")
        self.row_search_buttons: disnake.ui.ActionRow = disnake.ui.ActionRow()
        self.row_search_buttons.add_button(label='–ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ', emoji='üíò', style=disnake.ButtonStyle.blurple, custom_id=f'start_search_love')
        self.row_search_buttons.add_button(label='–ú–æ—è –∞–Ω–∫–µ—Ç–∞', emoji='üìù', style=disnake.ButtonStyle.blurple,
                                           custom_id=f'my_search_place')

    def return_ava(self, member: disnake.Member):
        if member.display_avatar:
            ava = member.display_avatar.url
        elif member.avatar:
            ava = member.avatar.url
        else:
            ava = member.default_avatar.url
        return ava

    async def send_search(self, member: disnake.Member, name: str, age: str, info: str, inter):
        channel = self.bot.get_channel(test_channel)
        await channel.purge(limit=1, check=lambda i: i.author == self.bot.user)
        emb_to_send: disnake.Embed = disnake.Embed(
            title=f'–ê–Ω–∫–µ—Ç–∞ ‚Äî {member}',
            color=0x2b2d31
        )
        emb_to_send.set_thumbnail(url=self.return_ava(member))
        emb_to_send.add_field(name='> –ò–º—è', value=f'```fix\n{name}```', inline=True)
        emb_to_send.add_field(name='> –í–æ–∑—Ä–∞—Å—Ç', value=f'```fix\n{age}```', inline=True)
        emb_to_send.add_field(name='> –û —Å–µ–±–µ', value=f'```{info}```', inline=False)
        row: disnake.ui.ActionRow = disnake.ui.ActionRow()
        row.add_button(label=' „Éª –ù–∞–ø–∏—Å–∞—Ç—å', emoji=f'‚úèÔ∏è', style=disnake.ButtonStyle.blurple,
                       custom_id='send_to_user_in_davinchik')
        msg = await channel.send(embed=emb_to_send, components=[row])
        await channel.send(embed=self.embed_search, components=[self.row_search_buttons])
        self.davinchik_db.update_one({"member_id": member.id, "guild_id": inter.guild.id}, {
            "$set": {"name": name, "age": age, "info": info, "next_time": int(time.time()) + (60 * 60 * 12),
                     "msg_id": msg.id}}, True)

    @commands.command()
    @commands.has_permissions(administrator=True)
    async def start_love_search_embed_send(self, ctx: disnake.MessageInteraction): #–ö–û–ú–ê–ù–î–ê
        await ctx.message.delete()
        await ctx.send(embed=self.embed_search, components=[self.row_search_buttons])

    @commands.Cog.listener("on_modal_submit")
    async def modal_listener(self, inter: disnake.ModalInteraction):
        member: disnake.Member = inter.author
        match inter.custom_id:
            case "search_loves_modal":
                for custom_id, value in inter.text_values.items():
                    match custom_id:
                        case "age":
                            age = value
                        case 'name':
                            name = value
                        case 'info':
                            info = value
                        case _:
                            return
                find = self.davinchik_db.find_one({"member_id": member.id, "guild_id": inter.guild.id})
                if find:
                    self.davinchik_db.delete_one(find)
                    channel_davinchik = self.bot.get_channel(test_channel)
                    if channel_davinchik:
                        try:
                            msg = await channel_davinchik.fetch_message(find['msg_id'])
                            if msg:
                                await msg.delete()
                        except(disnake.Forbidden, disnake.HTTPException, disnake.NotFound):
                            pass
                await self.send_search(member=member, name=name, age=age, info=info, inter=inter)
                emb = disnake.Embed(
                    title='–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∫–µ—Ç—ã',
                    description=f'{member.mention}, –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ **–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞**!',
                    color=0x2b2d31
                )
                emb.set_thumbnail(url=self.return_ava(member))
                await inter.send(embed=emb, ephemeral=True)
            case "search_loves_modal_edit":
                emb = disnake.Embed(
                    title='–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ê–Ω–∫–µ—Ç—ã',
                    description=f'{member.mention}, –≤—ã **–∏–∑–º–µ–Ω–∏–ª–∏** —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É! –ü—Ä–∞–≤–∫–∏ –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É —Å–æ **—Å–ª–µ–¥—É—é—â–µ–π** –æ—Ç–ø—Ä–∞–≤–∫–æ–π!',
                    color=0x2b2d31
                )
                emb.set_thumbnail(url=self.return_ava(member))
                await inter.response.edit_message(embed=emb, components=[])
                for custom_id, value in inter.text_values.items():
                    match custom_id:
                        case "age":
                            age = value
                        case 'name':
                            name = value
                        case 'info':
                            info = value
                        case _:
                            return
                self.davinchik_db.update_one({"member_id": member.id, "guild_id": inter.guild.id}, {"$set": {"name": name, "age": age, "info": info}}, True)


    @commands.Cog.listener("on_button_click")
    async def buttons_loves_search(self, inter: disnake.MessageInteraction):
        author: disnake.Member = inter.author
        match inter.component.custom_id:
            case "start_search_love":
                find = self.davinchik_db.find_one({"member_id": author.id, "guild_id": inter.guild.id})
                if find and find['next_time'] >= int(time.time()):
                    times = int((find['next_time'] - int(time.time())) / 60)
                    minutes = times % 60
                    hours = times // 60
                    emb = disnake.Embed(
                        title='–û—à–∏–±–∫–∞',
                        description=f'{author.mention}, –≤—ã **–Ω–µ–¥–∞–≤–Ω–æ** –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∞–Ω–∫–µ—Ç—É. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑: **{hours} —á–∞—Å–æ–≤, {minutes} –º–∏–Ω—É—Ç**',
                        color=0x2b2d31
                    )
                    emb.set_thumbnail(url=self.return_ava(author))
                    await inter.send(embed=emb, ephemeral=True)
                    return
                await inter.response.send_modal(
                    title=f"–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞",
                    custom_id=f"search_loves_modal",
                    components=[
                        disnake.ui.TextInput(
                            label="–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç",
                            placeholder=f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–ª—è –ø–æ–¥–∞—á–∏ –∞–Ω–∫–µ—Ç—ã - 18 –ª–µ—Ç",
                            custom_id="age",
                            style=disnake.TextInputStyle.short,
                            min_length=2,
                            max_length=3,
                            value=f'18'
                        ),
                        disnake.ui.TextInput(
                            label="–£–∫–∞–∂–∏—Ç–µ –∏–º—è",
                            placeholder=f"–£–∫–∞–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∞–≤–¥–∏–≤—ã–µ –∏–º–µ–Ω–∞",
                            custom_id="name",
                            style=disnake.TextInputStyle.short,
                            min_length=1,
                            max_length=15,
                        ),
                        disnake.ui.TextInput(
                            label="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ",
                            placeholder=f"–õ—é–±–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å, –Ω–µ –Ω–∞—Ä—É—à–∞—é—â–∞—è –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞",
                            custom_id="info",
                            style=disnake.TextInputStyle.paragraph,
                            min_length=10,
                            max_length=350,
                        )
                    ],
                )
            case "my_search_place":
                find = self.davinchik_db.find_one({"member_id": author.id, "guild_id": inter.guild.id})
                if not find:
                    emb = disnake.Embed(
                        title='–û—à–∏–±–∫–∞',
                        description=f'{author.mention}, —É –≤–∞—Å **–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç** –∞–Ω–∫–µ—Ç–∞!',
                        color=0x2b2d31
                    )
                    await inter.send(embed=emb, ephemeral=True)
                    return
                emb = disnake.Embed(
                    title='–í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –∞–Ω–∫–µ—Ç–∞',
                    color=0x2b2d31
                )
                emb.set_thumbnail(url=self.return_ava(author))
                emb.add_field(name='> –ò–º—è', value=f'```fix\n{find["name"]}```', inline=True)
                emb.add_field(name='> –í–æ–∑—Ä–∞—Å—Ç', value=f'```fix\n{find["age"]}```', inline=True)
                emb.add_field(name='> –û —Å–µ–±–µ', value=f'```{find["info"]}```', inline=False)
                row: disnake.ui.ActionRow = disnake.ui.ActionRow()
                row.add_button(label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–Ω–æ–≤–∞', style=disnake.ButtonStyle.blurple,
                               custom_id='send_search_around')
                row.add_button(label='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É', style=disnake.ButtonStyle.blurple,
                               custom_id='edit_search_davinchik')
                row1: disnake.ui.ActionRow = disnake.ui.ActionRow()
                row1.add_button(label='–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É', style=disnake.ButtonStyle.red,
                               custom_id='delete_search_davinchik')
                await inter.send(embed=emb, ephemeral=True, components=[row, row1])
            case "edit_search_davinchik":
                find = self.davinchik_db.find_one({"member_id": author.id, "guild_id": inter.guild.id})
                await inter.response.send_modal(
                        title=f"–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞",
                    custom_id=f"search_loves_modal_edit",
                    components=[
                        disnake.ui.TextInput(
                            label="–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç",
                            placeholder=f"–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–ª—è –ø–æ–¥–∞—á–∏ –∞–Ω–∫–µ—Ç—ã - 18 –ª–µ—Ç",
                            custom_id="age",
                            style=disnake.TextInputStyle.short,
                            min_length=2,
                            max_length=3,
                            value=f'{find["age"]}'
                        ),
                        disnake.ui.TextInput(
                            label="–£–∫–∞–∂–∏—Ç–µ –∏–º—è/–≤–æ–∑—Ä–∞—Å—Ç",
                            placeholder=f"–£–∫–∞–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –ø—Ä–∞–≤–¥–∏–≤—ã–µ –∏–º–µ–Ω–∞",
                            custom_id="name",
                            style=disnake.TextInputStyle.short,
                            min_length=1,
                            max_length=15,
                            value=f'{find["name"]}'
                        ),
                        disnake.ui.TextInput(
                            label="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ",
                            placeholder=f"–õ—é–±–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å, –Ω–µ –Ω–∞—Ä—É—à–∞—é—â–∞—è –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞",
                            custom_id="info",
                            style=disnake.TextInputStyle.paragraph,
                            min_length=10,
                            max_length=350,
                            value=f'{find["info"]}'
                        )
                    ],
                )

            case "delete_search_davinchik":
                emb = disnake.Embed(
                    title='–£–¥–∞–ª–µ–Ω–∏–µ –ê–Ω–∫–µ—Ç—ã',
                    description=f'{author.mention}, –≤—ã **—É–¥–∞–ª–∏–ª–∏** —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É!',
                    color=0x2b2d31
                )
                emb.set_thumbnail(url=self.return_ava(author))
                await inter.response.edit_message(embed=emb, components=[])
                find = self.davinchik_db.find_one({"member_id": author.id, "guild_id": inter.guild.id})
                if find:
                    self.davinchik_db.delete_one(find)
                    channel_davinchik = self.bot.get_channel(test_channel)
                    if channel_davinchik:
                        try:
                            msg = await channel_davinchik.fetch_message(find['msg_id'])
                        except (disnake.NotFound, disnake.Forbidden, disnake.HTTPException):
                            return
                        if msg:
                            await msg.delete()
            case "send_search_around":
                find = self.davinchik_db.find_one({"member_id": author.id, "guild_id": inter.guild.id})
                if find['next_time'] >= int(time.time()):
                    times = int((find['next_time'] - int(time.time())) / 60)
                    minutes = times % 60
                    hours = times // 60
                    emb = disnake.Embed(
                        description=f'{author.mention}, –≤—ã **–Ω–µ–¥–∞–≤–Ω–æ** –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∞–Ω–∫–µ—Ç—É. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑: **{hours} —á, {minutes} –º**',
                        color=0x2b2d31
                    )
                    emb.set_thumbnail(url=self.return_ava(author))
                    await inter.response.edit_message(embed=emb, components=[])
                    return
                emb = disnake.Embed(
                    title='–û—Ç–ø—Ä–∞–≤–∫–∞ –ê–Ω–∫–µ—Ç—ã',
                    description=f'{author.mention}, –≤—ã **—Å–Ω–æ–≤–∞** –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É!',
                    color=0x2b2d31
                )
                emb.set_thumbnail(url=self.return_ava(author))
                await inter.response.edit_message(embed=emb, components=[])
                self.davinchik_db.delete_one(find)
                channel_davinchik = self.bot.get_channel(test_channel)
                if channel_davinchik:
                    msg = await channel_davinchik.fetch_message(find['msg_id'])
                    if msg:
                        await msg.delete()
                self.davinchik_db.update_one(find, {"$inc": {"next_time": 60*60*12}}, True)
                await self.send_search(member=author, name=find['name'], age=find['age'], info=find['info'], inter=inter)
            case "send_to_user_in_davinchik":
                find = self.davinchik_db.find_one({"msg_id": inter.message.id})
                if find:
                    user_id = find['member_id']
                    member: disnake.Member = inter.guild.get_member(user_id)
                    if member:
                        user = f'{member.mention}'
                    else:
                        user = f'<@{user_id}>'
                    emb = disnake.Embed(
                        description=f'**–ù–µ—É–∂–µ–ª–∏ —ç—Ç–æ –Ω–∞—á–∞–ª–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ª—é–±–≤–∏?**\n–ù–∞–ø–∏—à–∏—Ç–µ {user} –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è,\n–∏–ª–∏ –∂–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
                        color=0x2b2d31
                    )
                    row_link: disnake.ui.ActionRow = disnake.ui.ActionRow()
                    row_link.add_button(label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', url=f"https://discord.com/users/{user_id}", style=disnake.ButtonStyle.url)
                    await inter.send(embed=emb, ephemeral=True, components=[row_link])



def setup(bot):
    bot.add_cog(Love_poisk(bot))
    print('–ö–æ–≥: "–î–∞–π–≤–∏–Ω—á–∏–∫" –∑–∞–≥—Ä—É–∑–∏–ª—Å—è!')
